[["index.html", "مبانی R مقدمه‌ای بر آشنایی با زبان برنامه نویسی R پیش گفتار", " مبانی R مقدمه‌ای بر آشنایی با زبان برنامه نویسی R محسن ابراهیمی فرودین ۱۴۰۰ پیش گفتار به همراه این کتاب می‌توانید یادگیری زبان برنامه نویسی R را شروع کنید. سعی کنید بعد از هر آموزش تمرینات مربوط به آن را انجام دهید. نظرات و پیشنهادات خود را می‌توانید از طریق ایمیل mohsenebrahimy.ir@gmail.com برای بهبود کتاب به نویسنده ارسال کنید تا در هر بروزرسانی اصلاحات صورت گیرد. این نسخه در تاریخ ۱۴۰۱-۱۰-۶ بروزرسانی شده است. https://mohsenebrahimyir.github.io/base-r/ https://github.com/mohsenebrahimyir/base-r/ امیدوارم این کتاب برایتان مفید باشد. محسن ابراهیمی www.mohsenebrahimy.ir "],["مقدمه.html", "فصل 1 مقدمه", " فصل 1 مقدمه زبان برنامه نویسی R یکی از بهترین زبان‌های برنامه نویسی متن باز است که برای تحلیل آماری داده‌ها استفاده می‌شود. برای این زبان کتابخانه‌های آماری بسیار زیادی تهیه شده است که می‌توانیم به راحتی از آن‌ها استفاده کنیم. "],["نصب-و-آماده-سازی-اولیه.html", "فصل 2 نصب و آماده سازی اولیه ", " فصل 2 نصب و آماده سازی اولیه "],["نصب-r.html", "2.1 نصب R", " 2.1 نصب R از طریق سایت www.r-project.org می‌توانید متناسب با سیستم عامل خود آخرین نسخه R را دانلود و نصب کنید. "],["نصب-rstudio.html", "2.2 نصب RStudio", " 2.2 نصب RStudio برای نوشتن، اجرا و خروجی گرفتن بهتر می‌توانید از یک نرم افزار IDE (Integrated Development Environment) استفاده کنید. برای زبان R می‌توانید از RStudio استفاده کنید. از طریق سایت www.posit.co می‌توانید متناسب با سیستم عامل خود آخرین نسخه RStudio را دانلود و نصب کنید. "],["محیط-rstudio.html", "2.3 محیط RStudio", " 2.3 محیط RStudio شکل 2.1: محیط نرم افزار RStudio "],["مفاهیم-پایه.html", "فصل 3 مفاهیم پایه", " فصل 3 مفاهیم پایه برای شروع بهتر است با یکسری از مفاهیم آشنا شویم. "],["اجرای-کد.html", "3.1 اجرای کد", " 3.1 اجرای کد راه اندازی محیط R در ترمینال و اجرای مستقیم کد در کنسول (Console) Code $ R &gt; my code ... نکته. برای پاک کردن کنسول می‌توانید از کلید میانبر ctrl + L استفاده کنید. ذخیره کدها در فایل متنی با پسوند code.R و اجرای آن با کد Rscript در کامند لاین Code $ Rscript code.R چاپ کردن Code print(&quot;Salam Donya!&quot;) [1] &quot;Salam Donya!&quot; دیدگاه و نظرات برای نوشتن دیدگاه (Comment) یا اجرا نکردن کدهای نوشته شده باید از # قبل از آن‌ها استفاده شود Code # The Comment helps the readability of the coding نکته. قرار دادن دیدگاه به فهم و خوانایی کد برای دیگران و بازبینی‌های آینده کمک می‌کند. "],["راهنما.html", "3.2 راهنما", " 3.2 راهنما ابزار راهنما (Help) در زبان R به ما امکان دسترسی به توضیحات مختصر هر شئ (Object) را می‌دهد. گرفتن راهنما برای تابع خاص که نام آن را می‌دانیم: Code ?print انجام جستجو در تمام بسته‌های نصب شده در سیستم: Code ??print جستجوی کلمه یا عبارت در پرونده راهنما: Code help.search(&#39;weighed print&#39;) پیدا کردن راهنما برای یک بسته Code help(package = &#39;tidyverse&#39;) پیدا کردن راهنمای توابع در همه بسته‌های موجود سایت CRAN Code RSiteSearch(&quot;print&quot;) استفاده از سایت گوگل (www.google.com) نکته. بهترین مهارت برای یک برنامه نویس مهارت گوگل کردن است. پرسیدن و جستجوی سوالات در سایت (stackoverflow.com) نکته. سعی کنید در ابتدای کار کل کدها را تایپ کنید و بدون فهم درست از کدها چیزی را کپی نکنید. "],["محیط-کاری.html", "3.3 محیط کاری", " 3.3 محیط کاری پیدا کردن محیط کاری (Working Directory) (جایی که در آن ورودی‌ها را گرفته و خروجی‌ها را تولید می‌کنید) Code getwd() [1] &quot;/home/{USER}/Desktop/&quot; تنظیم و تغییر محیط کاری Code setwd(&#39;/home/{USER}/Documents/&#39;) دقت داشته باشید که در زبان R مانند لینوکس از \"/\" برای جداسازی پوشه (Directory) و زیر پوشه (Sub Directory) استفاده می‌شود. برای مشخص کردن پوشه‌ای که در آن قرار داریم از . در آدرس استفاده می‌کنیم. برای مشخص کردن یک پوشه بالاتر از .. استفاده می‌کنیم. برای تنظیم محیط کاری بهتره از پروژه (Project) در RStudio استفاده کنید. "],["مقادیر.html", "فصل 4 مقادیر", " فصل 4 مقادیر به طور کلی در R برای یک مقدار (Value) انواع رشته‌ای (Character)، عددی (Numeric)، منطقی (Logical) و خالی (Null) وجود دارد. یافتن نوع (Type) یا کلاس (Class) یک شی Code typeof(&quot;Mohsen&quot;) [1] &quot;character&quot; Code class(&quot;Mohsen&quot;) [1] &quot;character&quot; "],["رشتهای.html", "4.1 رشته‌ای", " 4.1 رشته‌ای عمومی ترین نوع یک مقدار، نوع رشته‌ای است که درون '' یا \"\" قرار می‌گیرند. Code class(&#39;Hello&#39;) [1] &quot;character&quot; Code class(&quot;Hello&quot;) [1] &quot;character&quot; تغییر یک مقدار به نوع رشته‌ای Code as.character(99) [1] &quot;99&quot; مقادیر از دست رفته رشته‌ای Code class(NA_character_) [1] &quot;character&quot; "],["عددی.html", "4.2 عددی", " 4.2 عددی مقادیری که عملیات ریاضی بر آن‌ها می‌توان انجام داد. Code class(-1234567890) [1] &quot;numeric&quot; تغییر یک مقدار به نوع عددی Code as.numeric(&quot;000100.000&quot;) [1] 100 مقادیر تعریف نشده Code 0/0 [1] NaN Code Inf/Inf [1] NaN Code class(NaN) [1] &quot;numeric&quot; مقادیر عددی از دست رفته Code class(NA_real_) [1] &quot;numeric&quot; تغییر یک مقدار به نوع عددی صحیح (Integer) Code as.integer(12.001) [1] 12 مقادیر عددی صحیح از دست رفته Code class(NA_integer_) [1] &quot;integer&quot; تغییر یک مقدار به نوع عددی اعشاری (Double) Code as.double(12.001) [1] 12.001 تغییر یک مقدار به نوع عددی مختلط (Complex) Code as.complex(12.001) [1] 12.001+0i مقادیر عددی مختلط از دست رفته Code class(NA_complex_) [1] NA_complex_ "],["منطقی.html", "4.3 منطقی", " 4.3 منطقی مقادیر منطقی به صورت درست (True)، غلط (False) یا از دست رفته (Not Available) برمی‌گردند. تغییر مقدار به نوع منطقی به این صورت است که 0 را غلط برمیگرداند و مقادیر غیر 0را درست بر می‌گرداند. Code as.logical(564564) [1] True Code as.logical(0) [1] FALSE Code as.logical(NA) [1] NA 4.3.1 درست مقدار منطقی درست باید یا با حرف T یا با حروف بزرگ TRUE نوشته شود تا به عنوان مقدار منطقی درست پذیرفته شود. Code class(T) [1] &quot;logical&quot; Code class(TRUE) [1] &quot;logical&quot; دیگر املاهای عبارت درست، خطا بر می‌گردانند. Code class(true) Error: object &#39;true&#39; not found Code class(True) Error: object &#39;True&#39; not found چک کردن درست بودن یک مقدار Code isTRUE(TRUE) [1] TRUE 4.3.2 غلط مقدار منطقی غلط باید یا با حرف F یا با حروف بزرگ FALSE نوشته شود تا به عنوان مقدار منطقی پذیرفته شود. Code class(F) [1] &quot;logical&quot; Code class(FALSE) [1] &quot;logical&quot; دیگر املاهای عبارت غلط، خطا بر می‌گردانند. Code class(false) [1] Error: object &#39;false&#39; not found Code class(False) Error: object &#39;False&#39; not found چک کردن غلط بودن Code isFALSE(FALSE) [1] TRUE 4.3.3 از دست رفته به مقداری که به دلایلی در دسترس نیست گویند که با NA مشخص می‌شوند Code class(NA) [1] &quot;logical&quot; چک کردن از دست رفته بودن Code is.na(NA) [1] TRUE "],["خالی.html", "4.4 خالی", " 4.4 خالی مقادیر خالی با حروف بزرگ انگلیسی به صورت NULL مشخص می‌شوند Code class(NULL) [1] &quot;NULL&quot; چک کردن خالی بودن Code is.null(NULL) [1] TRUE "],["متغییرها.html", "فصل 5 متغییرها", " فصل 5 متغییرها هر شئ را می‌توان با =، &lt;- و -&gt; به یک متغییر مقدار دهی کرد Code variable = &quot;Salam&quot; # or variable &lt;- &quot;Salam&quot; # Alt + &quot;-&quot; # or &quot;Salam&quot; -&gt; variable برای نوشتن &lt;- می‌توان از کلید‌های میانبر Alt + - استفاده نمود. برای نمایش متغییر در هنگام مقدار دهی می‌توان کل کد را داخل پرانتز قرار داد. Code (variable &lt;- &quot;Salam&quot;) [1] &quot;Salam&quot; نام متغییر با حروف کوچک و بزرگ انگلیسی شروع می‌شود و شامل تمام حروف و اعداد انگلیسی، نقطه و زیرخط می‌تواند باشد. Code vAri.25_blE &lt;- &quot;Salam&quot; "],["ساختار-داده.html", "فصل 6 ساختار داده", " فصل 6 ساختار داده شکل 6.1: ساختار داده در R برای مدیریت داده‌ها در زبان برنامه نویسی R، ساختار داده‌های مختلفی را در نظر گرفته‌اند. مانند: بردار (Vector) Code c(1, 2, &quot;Mohsen&quot;, NA, 56) [1] &quot;1&quot; &quot;2&quot; &quot;Mohsen&quot; NA &quot;56&quot; Code 1:4 [1] 1 2 3 4 تولید یک بردار که مقادیر آن ترتیب خاصی دارند Code (vec &lt;- c(&quot;se&quot;, &quot;yek&quot;, &quot;se&quot;, &quot;do&quot;)) [1] &quot;se&quot; &quot;ye&quot; &quot;se&quot; &quot;do&quot; مرتب کردن برحسب حروف الفبا Code sort(vec) [1] &quot;do&quot; &quot;se&quot; &quot;se&quot; &quot;yek&quot; فاکتور (factor) Code (fct &lt;- factor(x = vec, levels = c(&quot;yek&quot;, &quot;do&quot;, &quot;se&quot;))) [1] se yek se do Levels: yek do se مرتب کردن بر حسب سطح بندی Code sort(fct) [1] yek do se se Levels: yek do se ماتریس (Matrix) Code matrix(data = 1:4, nrow = 2) [,1] [,2] [1,] 1 3 [2,] 2 4 آرایه (Array) Code array(data = 1:8, dim = c(2, 2, 2)) , , 1 [,1] [,2] [1,] 1 3 [2,] 2 4 , , 2 [,1] [,2] [1,] 5 7 [2,] 6 8 فرمت داده (Data Frame) Code data.frame( &quot;name&quot; = c(&quot;ali&quot;, &quot;sara&quot;, &quot;reza&quot;), &quot;age&quot; = c(27, 20, 30) ) name age male 1 ali 27 TRUE 2 sara 20 FALSE 3 reza 30 TRUE لیست (List) Code list( &quot;vec&quot; = 1:4, &quot;mat&quot; = matrix(data = 1:4, nrow = 2), &quot;ary&quot; = array(data = 1:8, dim = c(2, 2, 2)), &quot;df&quot; = data.frame( &quot;name&quot; = c(&quot;ali&quot;, &quot;sara&quot;, &quot;reza&quot;), &quot;age&quot; = c(27, 20, 30) ) ) $vec [1] 1 2 3 4 $mat [,1] [,2] [1,] 1 3 [2,] 2 4 $ary , , 1 [,1] [,2] [1,] 1 3 [2,] 2 4 , , 2 [,1] [,2] [1,] 5 7 [2,] 6 8 $df name age 1 ali 27 2 sara 20 3 reza 30 "],["توابع.html", "فصل 7 توابع", " فصل 7 توابع تابع (Function) با گرفتن یک یا چند ورودی، یک یا چند خروجی را تولید می‌کند. Code x = &quot;Salam&quot; # Input print(x) # Function [1] &quot;Salam&quot; # Output "],["توابع-درون-ساخت.html", "7.1 توابع درون ساخت", " 7.1 توابع درون ساخت توابعی که به طور پیش فرض در R قرار دارند را توابع درون ساخت (built-in) می‌گویند. دریافت خلاصه‌ای از ساختار (Structure) یک شئ Code str(iris) &#39;data.frame&#39;: 150 obs. of 5 variables: $ Sepal.Length: num 5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ... $ Sepal.Width : num 3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ... $ Petal.Length: num 1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ... $ Petal.Width : num 0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ... $ Species : Factor w/ 3 levels &quot;setosa&quot;,&quot;versicolor&quot;,..: 1 1 1 1 1 1 1 1 1 1 ... تبدیل چند رشته به یک رشته Code paste(&quot;Salam &quot;, &quot;Donya&quot;, &quot;!&quot;, sep = &quot;&quot;) ## or paste0() [1] &quot;Salam Donya!&quot; جای گذاری یک مقدار در یک رشته با استفاده از %s Code sprintf(fmt = &quot;Salam %s!&quot;, &quot;Donya&quot;) [1] &quot;Salam Donya!&quot; چاپ کردن چند چیز Code cat(&quot;Salam &quot;, &quot;Donya&quot;, &quot;!&quot;, sep = &quot;&quot;) Salam Donya! خواندن کامند لاین Code readline(prompt = &quot;lotfan ye chezy vared konid: &quot;) lotfan ye chezy vared konid: "],["ساخت-تابع.html", "7.2 ساخت تابع", " 7.2 ساخت تابع برای ساخت تابع باید به صورت زیر عمل کنیم. Code name &lt;- function(input) { # Do something return(output) } تابع جمع بستن Code jam &lt;- function(x, y) { z &lt;- x + y return(z) } Code jam(2, 3) [1] 5 Code class(jam) [1] &quot;function&quot; تابع سلام کردن Code salam &lt;- function(name) { salam_name &lt;- paste(&quot;Salam&quot;, name, &quot;aziz&quot;) return(salam_name) } Code salam(&quot;Mohsen&quot;) [1] &quot;Salam Mohsen aziz&quot; مقدار اولیه برای ورودی‌ها Code salam &lt;- function(name = &quot;Mohsen&quot;) { salam_name &lt;- sprintf(&quot;Salam %s Aziz&quot;, name) return(salam_name) } Code salam() [1] &quot;Salam Mohsen Aziz&quot; Code salam(name = &quot;Arash&quot;) [1] &quot;Salam Arash Aziz&quot; "],["بسته.html", "7.3 بسته", " 7.3 بسته خیلی از افراد توابعی که برای پروژه‌های شخصی خود نوشته‌اند را به صورت بسته (Package) اختیار دیگران قرار داده‌اند. 7.3.1 نصب بسته برای استفاده از توابع توسعه داده شده توسط دیگران، باید بسته مربوطه آن تابع را نصب نماییم: دانلود و نصب بسته‌ها از مخزن کِرَن (CRAN) Code install.packages(&quot;dplyr&quot;) نصب از مخزن گیت‌هاب (Github) ابتدا باید یکی از بسته‌های remotes یا devtools را نصب و سپس بسته مورد نظر را با یکی از روش زیر نصب نمایید. Code remotes::install_github(&quot;tidyverse/dplyr&quot;) # or devtools::install_github(&quot;tidyverse/dplyr&quot;) دانلود از مخازن دیگر مخزن بیت باکت (Bitbucket) با تابع install_bitbucket() مخزن گیت جنریک (Generic git) با تابع install_git() … 7.3.2 بارگذاری بسته library(\"package\"): تمام توابع موجود در یک پکیج را در محیط کاری آپلود می‌کند، اگر بسته نصب نباشد خطا (Error) برمی‌گرداند: Code library(&quot;alaki&quot;) Error in library(&quot;alaki&quot;) : there is no package called ‘alaki’ require(\"package\"): تمام توابع موجود در یک پکیج را در محیط کاری آپلود می‌کند، اگر بسته نصب نباشد غلط (FALSE) برمی‌گرداند: Code require(&quot;alaki&quot;) Loading required package: alaki Warning message: In library(package, lib.loc = lib.loc, character.only = TRUE, ... : there is no package called ‘alaki’ Code (require(&quot;alaki&quot;)) [1] FALSE Code if (!require(&quot;alaki&quot;)) install.packages(&quot;alaki&quot;) package::function(): این روش فقط برای مواقعی است که به صورت محلی می‌خواهیم تابع خاصی از یک پکیج را استفاده کنیم و دیگر به آن نیازی نداریم. Code dplyr::select(iris, c(&quot;Sepal.Width&quot;, &quot;Species&quot;)) Sepal.Width Species 1 3.5 setosa 2 3.0 setosa 3 3.2 setosa 4 3.1 setosa ... ... ... 7.3.3 بسته‌های پرکاربرد Tidyverse Code library(tidyverse) ── Attaching packages ────────────────── tidyverse 1.3.1 ── ✓ ggplot2 3.3.5 ✓ purrr 0.3.4 ✓ tibble 3.1.6 ✓ dplyr 1.0.8 ✓ tidyr 1.2.0 ✓ stringr 1.4.0 ✓ readr 2.1.2 ✓ forcats 0.5.1 ── Conflicts ─────────────────────────── tidyverse_conflicts() ── x dplyr::filter() masks stats::filter() x dplyr::lag() masks stats::lag() این بسته متشکل از بسته‌های معروفی همچون ggplot، tidyr، dplyr، readr، stringr و … است. "],["فایلها.html", "فصل 8 فایل‌ها", " فصل 8 فایل‌ها فایل‌ها برای ذخیره سازی، و انتقال داده‌ها استفاده می‌شوند که نیاز داریم از روی آن‌ها داده‌ها را بخوانیم و بنویسیم. خروجی گرفتن داده با پسوند .csv Code write.csv(x = iris, file = &quot;iris.csv&quot;) وارد کردن داده با پسوند .csv Code read.csv(file = &quot;iris.csv&quot;) X Sepal.Length Sepal.Width Petal.Length Petal.Width Species 1 1 5.1 3.5 1.4 0.2 setosa 2 2 4.9 3.0 1.4 0.2 setosa 3 3 4.7 3.2 1.3 0.2 setosa خروجی گرفتن داده با پسوند اکسل Code writexl::write_xlsx(x = iris, path = &quot;iris.xlsx&quot;) وارد کردن داده با پسوند اکسل Code readxl::read_xlsx(path = &quot;iris.xlsx&quot;) # A tibble: 150 × 5 Sepal.…¹ Sepal…² Petal…³ Petal…⁴ Species &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; 1 5.1 3.5 1.4 0.2 setosa 2 4.9 3 1.4 0.2 setosa 3 4.7 3.2 1.3 0.2 setosa 4 4.6 3.1 1.5 0.2 setosa 5 5 3.6 1.4 0.2 setosa 6 5.4 3.9 1.7 0.4 setosa 7 4.6 3.4 1.4 0.3 setosa 8 5 3.4 1.5 0.2 setosa 9 4.4 2.9 1.4 0.2 setosa 10 4.9 3.1 1.5 0.1 setosa # … with 140 more rows, and abbreviated # variable names ¹​Sepal.Length, # ²​Sepal.Width, ³​Petal.Length, # ⁴​Petal.Width # ℹ Use `print(n = ...)` to see more rows "],["عملگرها.html", "فصل 9 عملگرها", " فصل 9 عملگرها عملگر (Operator) نوع خاصی از تابع است که روی چیز‌های که در چپ و راست آن قرار گیرد، اعمال می‌شود. $ Code unique(iris $ Species) [1] setosa versicolor virginica Levels: setosa versicolor virginica با استفاده از عملگر پایپ می‌توانیم خروجی یک تابع را به عنوان وروردی به اولین آرگومان تابع بعدی دهیم عملگر پایپ می‌تواند کار با توابع را ساده و از تعریف متغییر‌های زیاد جلوگیری کند. |&gt; یک عملگر درون ساخت است. Code iris $ Species |&gt; unique() [1] setosa versicolor virginica Levels: setosa versicolor virginica %&gt;% باید بسته tidyverse را فراخوانی کنیم. Code iris $ Species %&gt;% unique() [1] setosa versicolor virginica Levels: setosa versicolor virginica "],["عملگرهای-حسابی.html", "9.1 عملگرهای حسابی", " 9.1 عملگرهای حسابی عملگر حسابی اعداد را به عنوان ورودی می‌گیرد و اعمال ریاضی را اعمال می‌کند. جمع Code 2 + 3 [1] 5 تفریق 2 - 3 [1] -1 ضرب Code 2 * 3 [1] 6 تقسیم Code 2 / 3 [1] 0.6666667 باقی‌مانده تقسیم Code 5 %% 3 [1] 2 قسمت صحیح تقسیم Code 5 %/% 3 [1] 1 توان Code 2^3 [1] 8 استفاده از توان کسری برای جذر Code (4)^(1/2) [1] 2 "],["عملگر-منطقی.html", "9.2 عملگر منطقی", " 9.2 عملگر منطقی عملگر منطقی مقادیر درست و غلط برمی‌گرداند. برابری Code 1 == 2 [1] FALSE نابرابری Code 1 != 2 [1] TRUE بزرگتری Code 2 &gt; 2 [1] FALSE بزرگتری یا برابری Code 2 &gt;= 2 [1] FALSE کوچکتری Code 2 &lt; 2 [1] FALSE کوچکتری یا برابری Code 2 &lt;= 2 [1] TRUE و هر دو شرط اجرا می‌شود و در صورت درست بودن هر دوی آن‌ها مقدار TRUE برمی‌گرداند در غیر این صورت مقدار FALSE برمیگرداند. Code 1 == 2 &amp; 1 &lt; 2 [1] FALSE شرط دوم در صورت درست بودن شرط اول اجرا می‌شود. و در صورت درست بودن هر دوی آن‌ها مقدار TRUE برمی‌گرداند در غیر این صورت مقدار FALSE برمیگرداند. Code 1 == 2 &amp;&amp; 1 &lt; 2 [1] FALSE یا هر دو شرط اجرا می‌شود و در صورت درست بودن یکی از آن‌ها مقدار TRUE برمی‌گرداند در غیر این صورت مقدار FALSE برمیگرداند. Code 1 == 2 | 1 &lt; 2 [1] TRUE شرط دوم در صورت نادرست بودن شرط اول اجرا می‌شود و اگر یکی از آن‌ها درست بود مقدار TRUE برمی‌گرداند در غیر این صورت مقدار FALSE برمیگرداند. Code 1 == 2 || 1 &lt; 2 [1] TRUE مخالف بعد از بررسی عمل منطقی خلاف مقدار برگردانده شده را بر می‌گرداند. Code !(1 == 2) [1] TRUE شامل بودن برای این که چک کنیم که آیا اعضای یک بردار درون بردار دیگری هست یا خیر Code c(&quot;reza&quot;, &quot;ebrahim&quot;) %in% c(&quot;mohsen&quot;, &quot;reza&quot;, &quot;mahsa&quot;, &quot;iman&quot;, &quot;peyman&quot;) [1] TRUE FALSE "],["دستورات-شرطی.html", "فصل 10 دستورات شرطی", " فصل 10 دستورات شرطی دستورات شرطی برای تصمیم‌گیری و جهت دهی جریان پردازش اطلاعات استفاده می‌شوند. if Code a &lt;- 33 b &lt;- 200 if (b &gt; a) { print(&quot;b is greater than a&quot;) } [1] &quot;b is greater than a&quot; if else Code a &lt;- 200 b &lt;- 33 if (b &gt; a) { print(&quot;b is greater than a&quot;) } else { print(&quot;b is not greater than a&quot;) } &quot;b is not greater than a&quot; if else if Code a &lt;- 33 b &lt;- 33 if (b &gt; a) { print(&quot;b is greater than a&quot;) } else if (a == b) { print (&quot;a and b are equal&quot;) } &quot;a and b are equal&quot; if else if else Code a &lt;- 200 b &lt;- 33 if (b &gt; a) { print(&quot;b is greater than a&quot;) } else if (a == b) { print(&quot;a and b are equal&quot;) } else { print(&quot;a is greater than b&quot;) } [1] &quot;a is greater than b&quot; شروط تو در تو Code x &lt;- 41 if (x &gt; 10) { print(&quot;Above ten&quot;) if (x &gt; 20) { print(&quot;and also above 20!&quot;) } else { print(&quot;but not above 20.&quot;) } } else { print(&quot;below 10.&quot;) } [1] &quot;Above ten&quot; [1] &quot;and also above 20!&quot; و Code a &lt;- 200 b &lt;- 33 c &lt;- 500 if (a &gt; b &amp; c &gt; a) { print(&quot;Both conditions are true&quot;) } [1] &quot;Both conditions are true&quot; یا Code a &lt;- 200 b &lt;- 33 c &lt;- 500 if (a &gt; b | a &gt; c) { print(&quot;At least one of the conditions is true&quot;) } [1] &quot;At least one of the conditions is true&quot; ifelse() Code a &lt;- 3 b &lt;- 5 ifelse((a &lt; b), &quot;b is greater than b&quot;, &quot;b is not greater than b&quot;) [1] &quot;b is greater than b&quot; "],["حلقه.html", "فصل 11 حلقه", " فصل 11 حلقه while برای تکرارهای به مقدار نا معلوم می‌توانیم از ساختار حلقه while استفاده نماییم. Code i = 5 while (i &gt; 0) { &quot;%sth alaki&quot; |&gt; sprintf(i) |&gt; print() i &lt;- i - 1 } ## [1] &quot;5th alaki&quot; ## [1] &quot;4th alaki&quot; ## [1] &quot;3th alaki&quot; ## [1] &quot;2th alaki&quot; ## [1] &quot;1th alaki&quot; for برای تکرار به مقدار معلوم می‌توانیم از ساختار حلقه for استفاده نماییم. Code for (i in 1:5) { &quot;%sth alaki&quot; |&gt; sprintf(i) |&gt; print() } ## [1] &quot;1th alaki&quot; ## [1] &quot;2th alaki&quot; ## [1] &quot;3th alaki&quot; ## [1] &quot;4th alaki&quot; ## [1] &quot;5th alaki&quot; "],["نمودار.html", "فصل 12 نمودار", " فصل 12 نمودار برای رسم نمودار در R توابع زیادی وجود دارد که می‌توانیم برای رسم مدل‌های مختلف نمودار از آن‌ها استفاده کنیم. هیستوگرام (Histogram) Code iris$Sepal.Width |&gt; hist() توزیع چگالی (Density) Code iris$Sepal.Width |&gt; density() |&gt; plot() نمودار پراکندگی Code plot(iris$Sepal.Width, iris$Petal.Length) نمودار دایره‌ای Code x &lt;- c(&quot;a&quot; = 20, &quot;b&quot; = 40, &quot;c&quot; = 10, &quot;d&quot; = 30) pie(x) ذخیره نمودار در فرمت‌های مختلف Code # pdf(&quot;fig/rplot.pdf&quot;, width = 350, height = 350) # png(&quot;fig/rplot.png&quot;, width = 350, height = 350) jpeg(&quot;fig/rplot.jpg&quot;, width = 350, height = 350) mtcars$mpg |&gt; density() |&gt; plot() dev.off() ggplot2: یکی از بهترین بسته‌های رسم نمودار، بسته ggplot2 است. Code library(ggplot2) iris |&gt; ggplot() + aes(x = Petal.Length, y = Petal.Width, color = Species) + geom_point() "],["بردار---کمی-بیشتر.html", "فصل 13 بردار - کمی بیشتر", " فصل 13 بردار - کمی بیشتر بردار (Vector) یک ساختار یک بعدی که تمام مقادیر آن از یک نوع هستند. \\[\\Large x = \\begin{bmatrix} x_{1} &amp; x_{2} &amp; \\dots &amp; x_{n} \\end{bmatrix} \\] بردار خالی \\[\\Large x = [] \\] Code c() NULL بردار تک عضوی \\[\\Large x = \\begin{bmatrix} 27 \\end{bmatrix} \\] Code c(27) [1] 27 \\[\\Large x = \\begin{bmatrix} a \\end{bmatrix} \\] Code c(&quot;a&quot;) [1] &quot;a&quot; \\[\\Large x = \\begin{bmatrix} True \\end{bmatrix} \\] Code c(TRUE) [1] TRUE \\[\\Large x = \\begin{bmatrix} Not\\;Available \\end{bmatrix} \\] Code c(NA) [1] NA بردار چند عضوی دلخواه \\[\\Large x = \\begin{bmatrix} 27 &amp; Mohsen &amp; True &amp; Not\\;Available \\end{bmatrix} \\] Code (reshteei &lt;- c(27, &quot;Mohsen&quot;, TRUE, NA)) [1] &quot;27&quot; &quot;Mohsen&quot; &quot;TRUE&quot; NA اگر در بین مقادیر یک نوع رشته‌ای وجود داشته باشد، وکتور از نوع رشته‌ای می‌شود. Code class(reshteei) [1] &quot;character&quot; اگر در بین مقادیر عددی مقادیر منطقی داشته باشیم،، وکتور از نوع عددی می‌شود. Code (adadi &lt;- c(27, TRUE, NA)) [1] 27 1 NA Code class(adadi) [1] &quot;numeric&quot; تشکیل یک بردار با چند بردار Code c(reshteei, adadi, 35, &quot;Salam&quot;) [1] &quot;27&quot; &quot;Mohsen&quot; &quot;TRUE&quot; NA &quot;27&quot; &quot;1&quot; NA &quot;35&quot; &quot;Salam&quot; می‌توان برای هر یک از مقادیر یک نام هم تعریف کرد. Code c(1, &quot;dovom&quot; = 2, 3) dovom 1 2 3 "],["مقادیر-متوالی.html", "13.1 مقادیر متوالی", " 13.1 مقادیر متوالی مرتب کردن مقادیر Code sort(c(5, 7, -2, 5, 3, 9)) [1] -2 3 5 5 7 9 توالی صعودی در بازه مشخص Code 1:10 [1] 1 2 3 4 5 6 7 8 9 10 توالی نزولی در بازه مشخص Code 10:1 [1] 10 9 8 7 6 5 4 3 2 1 توالی صعودی با تعداد مشخص Code seq_len(5) [1] 1 2 3 4 5 توالی صعودی با فاصله مشخص در بازه مشخص Code seq(from = 5, to = 10, by = .5) [1] 5.0 5.5 6.0 6.5 7.0 7.5 8.0 8.5 9.0 9.5 10.0 توالی صعودی به تعداد مشخص در بازه مشخص Code seq(from = 5, to = 10, length = 5) [1] 5.00 6.25 7.50 8.75 10.00 حروف کوچک الفبای انگلیسی Code letters [1] &quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot; &quot;g&quot; &quot;h&quot; &quot;i&quot; &quot;j&quot; &quot;k&quot; &quot;l&quot; &quot;m&quot; [14] &quot;n&quot; &quot;o&quot; &quot;p&quot; &quot;q&quot; &quot;r&quot; &quot;s&quot; &quot;t&quot; &quot;u&quot; &quot;v&quot; &quot;w&quot; &quot;x&quot; &quot;y&quot; &quot;z&quot; حروف بزرگ الفبای انگلیسی Code LETTERS [1] &quot;A&quot; &quot;B&quot; &quot;C&quot; &quot;D&quot; &quot;E&quot; &quot;F&quot; &quot;G&quot; &quot;H&quot; &quot;I&quot; &quot;J&quot; &quot;K&quot; &quot;L&quot; &quot;M&quot; [14] &quot;N&quot; &quot;O&quot; &quot;P&quot; &quot;Q&quot; &quot;R&quot; &quot;S&quot; &quot;T&quot; &quot;U&quot; &quot;V&quot; &quot;W&quot; &quot;X&quot; &quot;Y&quot; &quot;Z&quot; تکرار یک مقدار به تعداد مشخص Code rep(x = 2, 10) [1] 2 2 2 2 2 2 2 2 2 2 تکرار یک بردار به تعداد n بار Code rep(c(1, 6, 5), times = 2) [1] 1 6 5 1 6 5 تکرار هر مقدار یک بردار به تعداد n بار Code rep(c(1, 6, 5), each=2) [1] 1 1 6 6 5 5 "],["مقادیر-تصادفی.html", "13.2 مقادیر تصادفی", " 13.2 مقادیر تصادفی اعداد تصادفی در بازه مشخص بدون تکرار Code sample(x = 1:20, size = 10) [1] 5 12 1 4 6 7 10 8 3 13 اعداد تصادفی در بازه مشخص با تکرار Code sample(x = 1:20, size = 10, replace = T) [1] 7 18 4 16 10 19 9 16 17 10 حروف کوچک انگلیسی تصادفی بدون تکرار Code sample(x = letters, size = 10) [1] &quot;r&quot; &quot;u&quot; &quot;z&quot; &quot;h&quot; &quot;k&quot; &quot;a&quot; &quot;m&quot; &quot;b&quot; &quot;v&quot; &quot;s&quot; اعداد تصادفی با توزیع نرمال Code rnorm(n = 10, mean = 0, sd = 1) [1] 1.29085505 0.70984957 -0.04318293 0.63228842 0.48876293 [6] 0.03517201 -0.13634837 -0.16242425 0.91619639 -0.72076816 اعداد تصادفی با توزیع یکنواخت Code runif(n = 10, min = 0, max = 1) [1] 0.8406612 0.7941666 0.5174069 0.2705386 0.2232102 [6] 0.8314685 0.9551069 0.1105243 0.1253661 0.1118882 "],["ریاضی.html", "13.3 ریاضی", " 13.3 ریاضی Code (math &lt;- c(1.3574, -2.2, 5, 4, -7, 2.55, 1.4, -8)) [1] 1.3574 -2.2000 5.0000 4.0000 -7.0000 2.5500 1.4000 -8.0000 گرد کردن مقادیر تا رقم اعشار دلخواه Code round(math, digits = 2) [1] 1.36 -2.20 5.00 4.00 -7.00 2.55 1.40 -8.00 قدرمطلق مقادیر \\[\\Large |x| = \\begin{bmatrix} |x_{1}| &amp; |x_{2}| &amp; \\dots &amp; |x_{n}| \\end{bmatrix} \\] Code abs(math) [1] 1.3574 2.2000 5.0000 4.0000 7.0000 2.5500 1.4000 8.0000 جذر \\[\\Large \\sqrt{x} = \\begin{bmatrix} \\sqrt{x_{1}} &amp; \\sqrt{x_{2}} &amp; \\dots &amp; \\sqrt{x_{n}} \\end{bmatrix} \\] Code sqrt(math) [1] 1.165075 NaN 2.236068 2.000000 NaN 1.596872 1.183216 NaN "],["انتخاب-مقادیر.html", "13.4 انتخاب مقادیر", " 13.4 انتخاب مقادیر Code (vec &lt;- c(Name = &quot;Mohsen&quot;, Age = 27, Male = TRUE, &quot;alaki&quot;, NA, &quot;alaki&quot;)) Name Age Male &quot;Mohsen&quot; &quot;27&quot; &quot;TRUE&quot; &quot;alaki&quot; NA &quot;alaki&quot; انتخاب اندیس (Index) n ام Code vec[3] Male &quot;TRUE&quot; انتخاب همه مقادیر به غیر از اندیس n ام Code vec[-3] Name Age &quot;Mohsen&quot; &quot;27&quot; &quot;alaki&quot; NA &quot;alaki&quot; انتخاب اندیس‌های دلخواه Code vec[c(2, 5)] Age &quot;27&quot; NA انتخاب همه‌ی اندیس‌ها به غیر از اندیس‌های دلخواه Code vec[-c(2, 5)] Name Male &quot;Mohsen&quot; &quot;TRUE&quot; &quot;alaki&quot; &quot;alaki&quot; انتخاب مقدار بوسیله نام Code vec[c(&quot;Name&quot;, &quot;Age&quot;)] Name Age &quot;Mohsen&quot; &quot;27&quot; تغییر ترتیب اندیس‌های مقادیر Code vec[c(5, 2)] Age NA &quot;27&quot; n مقدار اول بردار Code head(x = vec, n = 3) Name Age Male &quot;Mohsen&quot; &quot;27&quot; &quot;TRUE&quot; n مقدار آخر بردار Code tail(x = vec, n = 3) &quot;alaki&quot; NA &quot;alaki&quot; گرفتن مقادیر بدون تکرار Code unique(x = vec) [1] &quot;Mohsen&quot; &quot;27&quot; &quot;TRUE&quot; &quot;alaki&quot; NA گرفتن مقادیر تکراری این تابع برای مقادیر که بیش از یک بار تکرار شده‌اند، مقدار درست و برای بقیه غلط بر میگرداند Code duplicated(x = vec) [1] FALSE FALSE FALSE FALSE FALSE TRUE انتخاب مقادیر تکرار شده Code vec[duplicated(vec)] &quot;alaki&quot; انتخاب مقادیر تکرار نشده Code vec[!duplicated(vec)] Name Age Male &quot;Mohsen&quot; &quot;27&quot; &quot;TRUE&quot; &quot;alaki&quot; NA حذف مقادیر از دست رفته Code na.omit(vec) Name Age Male &quot;Mohsen&quot; &quot;27&quot; &quot;TRUE&quot; &quot;alaki&quot; &quot;alaki&quot; "],["آمار.html", "13.5 آمار", " 13.5 آمار Code (stat &lt;- c(1, -2, 5, 5, 4, -7, 5, -2, 6, 0, 3)) ## [1] 1 -2 5 5 4 -7 5 -2 6 0 3 بیشترین (Maximum) \\[\\Large x_{max} \\] Code max(stat) ## [1] 6 کمترین1 \\[\\Large x_{min} \\] Code min(stat) ## [1] -7 تعداد2 \\[\\Large N \\] Code length(stat) ## [1] 11 بازه3 \\[\\Large x_{min} \\leq x \\leq x_{max} \\] Code range(stat) ## [1] -7 6 میانه4 \\[\\Large x_{median} = \\left\\{ \\begin{array}{lr} x_{\\frac{N}{2}} &amp; {\\bf if}\\;N\\;{\\bf is\\;even} \\\\ \\cfrac{x_{\\frac{N-1}{2}} + x_{\\frac{N+1}{2}}}{2} &amp; {\\bf if}\\;N\\;{\\bf is\\;odd} \\end{array} \\right. \\] Code median(stat) ## [1] 3 چارک‌ها5 چارک اول (\\({\\bf Q1}\\)), چارک دوم یا همان میانه (\\({\\bf Q2\\;or\\;Median}\\)), چارک سوم (\\({\\bf Q3}\\)), \\[\\Large x_{sort} = \\left[ \\begin{array}{ccccccccccc} -7 &amp; -2 &amp; \\overset{\\overset{{\\bf Q1}}{\\uparrow}}{-2} &amp; 0 &amp; 1 &amp; \\overset{\\overset{{\\bf Q2}}{\\uparrow}}{3} &amp; 4 &amp; 5 &amp; \\overset{\\overset{{\\bf Q3}}{\\uparrow}}{5} &amp; 5 &amp; 6 \\end{array} \\right] \\] برای محاسبه چارک‌ها باید تابع جدید ساخت زیرا تابع پیش فرضی وجود ندارد تعریف تابع Code quart &lt;- function(x) { x &lt;- sort(x) n &lt;- length(x) m &lt;- (n+1)/2 if (floor(m) != m) { l &lt;- m-1/2; u &lt;- m+1/2 } else { l &lt;- m-1; u &lt;- m+1 } c(Q1=median(x[1:l]), Q2=median(x), Q3=median(x[u:n])) } استفاده از تابع Code quart(stat) ## Q1 Q2 Q3 ## -2 3 5 مد6 به دلیل نبود تابع مد در زبان R می‌توانیم برای آن از تابع زیر استفاده کنیم. تعریف تابع Code modes &lt;- function(x) { ux &lt;- unique(x) tab &lt;- tabulate(match(x, ux)) ux[tab == max(tab)] } استفاده از تابع Code modes(stat) ## [1] 5 مجموع \\[\\Large S_{x} = \\sum_{i=1}^{i=n} x_{i} \\] Code sum(stat) ## [1] 18 میانگین \\[\\Large \\mu_{x} = \\cfrac{\\sum x_{i}}{N} \\] Code mean(stat) ## [1] 1.636364 انحراف معیار \\[\\Large \\sigma = \\sqrt{\\cfrac{\\sum(x_{i} - \\mu)^{2}}{N}} \\] Code sd(stat) ## [1] 4.05642 نرمال سازی داده‌ها \\[\\Large Z = \\frac{x - \\mu}{\\sigma} = \\begin{bmatrix} \\frac{x_{1} - \\mu}{\\sigma} &amp; \\frac{x_{2} - \\mu}{\\sigma} &amp; \\dots &amp; \\frac{x_{n} - \\mu}{\\sigma} \\end{bmatrix} \\] Code as.vector(scale(stat)) ## [1] -0.1568781 -0.8964465 0.8292130 0.8292130 0.5826902 -2.1290604 ## [7] 0.8292130 -0.8964465 1.0757358 -0.4034009 0.3361674 جمع با مقادیر از دست رفته Code sum(c(1, 2, 3, NA, 5, NA)) ## [1] NA جمع بدون مقادیر از دست رفته Code sum(c(1, 2, 3, NA, 5, NA), na.rm = T) ## [1] 11 Minimum↩︎ Count↩︎ Range↩︎ Median↩︎ Quartile↩︎ Mode↩︎ "],["ماتریس---کمی-بیشتر.html", "فصل 14 ماتریس - کمی بیشتر", " فصل 14 ماتریس - کمی بیشتر هر ماتریس7 از n تا ردیف و m تا ستون تشکیل شده است. \\[\\Large {\\bf M}_{n \\times m} = \\left. \\vphantom{\\begin{array}{c}1\\\\1\\\\1\\\\1\\\\1\\end{array}} \\smash{\\underbrace{\\left[ \\begin{array}{ccccc} x_{11} &amp; x_{12} &amp; \\dots &amp; x_{1m} \\\\ x_{21} &amp; x_{22} &amp; \\dots &amp; x_{2m} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ x_{n1} &amp; x_{n2} &amp; \\dots &amp; x_{nm} \\end{array} \\right] }_{m\\;Columns}} \\right\\} \\,n\\;Rows\\\\ \\] Code (mtx &lt;- matrix(nrow = 5, ncol = 4)) ## [,1] [,2] [,3] [,4] ## [1,] NA NA NA NA ## [2,] NA NA NA NA ## [3,] NA NA NA NA ## [4,] NA NA NA NA ## [5,] NA NA NA NA نوع ساختار داده Code class(mtx) ## [1] &quot;matrix&quot; &quot;array&quot; ابعاد8 Code dim(mtx) ## [1] 5 4 ساختار و نوع مقادیر Code str(mtx) ## logi [1:5, 1:4] NA NA NA NA NA NA ... خواص ماتریس Code attributes(mtx) ## $dim ## [1] 5 4 دادن تک مقدار به ماتریس Code matrix(data = 1, nrow = 3, ncol = 3) ## [,1] [,2] [,3] ## [1,] 1 1 1 ## [2,] 1 1 1 ## [3,] 1 1 1 تبدیل بردار به ماتریس Code matrix(data = c(1,2,4,4,5,4,7,6,3), nrow = 3, ncol = 3) ## [,1] [,2] [,3] ## [1,] 1 4 7 ## [2,] 2 5 6 ## [3,] 4 4 3 چینش به ترتیب ستون \\[\\Large M_{n \\times m} = \\begin{bmatrix} \\overset{\\downarrow}{1} &amp; \\overset{\\downarrow}{4} &amp; \\overset{\\downarrow}{7} \\\\ 2 &amp; 5 &amp; 8\\\\ 3 &amp; 6 &amp; 9 \\end{bmatrix} \\] Code matrix(data = 1:9, nrow = 3, ncol = 3) ## byrow = FALSE ## [,1] [,2] [,3] ## [1,] 1 4 7 ## [2,] 2 5 8 ## [3,] 3 6 9 چینش به ترتیب ردیف \\[\\Large M_{n \\times m} = \\begin{bmatrix} \\rightarrow 1 &amp; 2 &amp; 3 \\\\ \\rightarrow 4 &amp; 5 &amp; 6 \\\\ \\rightarrow 7 &amp; 8 &amp; 9 \\end{bmatrix} \\] Code matrix(data = 1:9, nrow = 3, ncol = 3, byrow = TRUE) ## [,1] [,2] [,3] ## [1,] 1 2 3 ## [2,] 4 5 6 ## [3,] 7 8 9 Matrix↩︎ Dimansion↩︎ "],["تغییر-ابعاد-ماتریس.html", "14.1 تغییر ابعاد ماتریس", " 14.1 تغییر ابعاد ماتریس ساخت یک ماتریس \\(4 \\times 4\\) Code (mtx &lt;- matrix(data = 1:16, nrow = 4, ncol = 4)) ## [,1] [,2] [,3] [,4] ## [1,] 1 5 9 13 ## [2,] 2 6 10 14 ## [3,] 3 7 11 15 ## [4,] 4 8 12 16 تغییر ابعاد ماتریس به \\(8 \\times 2\\) Code (dim(mtx) &lt;- c(8, 2)) ## [1] 8 2 Code mtx ## [,1] [,2] ## [1,] 1 9 ## [2,] 2 10 ## [3,] 3 11 ## [4,] 4 12 ## [5,] 5 13 ## [6,] 6 14 ## [7,] 7 15 ## [8,] 8 16 نکته: در هنگام تغییر ابعاد باید حاصل ضرب ابعاد جدید با حاصل ضرب ابعاد قبلی برابر باشد. \\[\\Large {\\bf M}_{n \\times m} \\overset{{\\bf if} \\; n \\times m = n&#39; \\times m&#39;}{\\Longrightarrow} {\\bf M&#39;}_{n&#39; \\times m&#39;} \\] ماتریس یک ساختار دو بعدی از مقادیر است که تمام مقادیر آن از یک نوع هستند. برای مثال حتی یک مقدار رشته‌ای در بین مقادیر عددی باشد، نوع تمام مقادیر، رشته‌ای می‌شود. Code (mtx &lt;- matrix(c(1:15, &quot;a&quot;), 4, 4)) ## [,1] [,2] [,3] [,4] ## [1,] &quot;1&quot; &quot;5&quot; &quot;9&quot; &quot;13&quot; ## [2,] &quot;2&quot; &quot;6&quot; &quot;10&quot; &quot;14&quot; ## [3,] &quot;3&quot; &quot;7&quot; &quot;11&quot; &quot;15&quot; ## [4,] &quot;4&quot; &quot;8&quot; &quot;12&quot; &quot;a&quot; Code str(mtx) ## chr [1:4, 1:4] &quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;4&quot; &quot;5&quot; &quot;6&quot; &quot;7&quot; &quot;8&quot; &quot;9&quot; &quot;10&quot; &quot;11&quot; &quot;12&quot; &quot;13&quot; ... تعریف ماتریس همانی9 \\[\\Large {\\bf I}_{n} = \\begin{bmatrix} 1&amp;0&amp;\\cdots &amp;0\\\\ 0&amp;1&amp;\\cdots &amp;0\\\\ \\vdots&amp;\\vdots&amp;\\ddots&amp;\\vdots\\\\ 0&amp;0&amp;\\cdots &amp;1 \\end{bmatrix} \\] Code diag(4) ## [,1] [,2] [,3] [,4] ## [1,] 1 0 0 0 ## [2,] 0 1 0 0 ## [3,] 0 0 1 0 ## [4,] 0 0 0 1 تعریف ماتریس قطری10 \\[\\Large {\\bf I}_{n} = \\begin{bmatrix} x_{1}&amp;0&amp;\\cdots &amp;0\\\\ 0&amp;x_{2}&amp;\\cdots &amp;0\\\\ \\vdots&amp;\\vdots&amp;\\ddots&amp;\\vdots\\\\ 0&amp;0&amp;\\cdots &amp;x_{n} \\end{bmatrix} \\] Code diag(c(9, 5, 8, 3)) ## [,1] [,2] [,3] [,4] ## [1,] 9 0 0 0 ## [2,] 0 5 0 0 ## [3,] 0 0 8 0 ## [4,] 0 0 0 3 گرفتن قطر یک ماتریس Code diag(mtx) ## [1] &quot;1&quot; &quot;6&quot; &quot;11&quot; &quot;a&quot; Identity↩︎ Diagnol↩︎ "],["مقایسه-دو-ماتریس.html", "14.2 مقایسه دو ماتریس", " 14.2 مقایسه دو ماتریس ماتریس A \\[\\Large A = \\begin{bmatrix} a_{11} &amp; \\cdots &amp; a_{1m} \\\\ \\vdots &amp; \\ddots &amp; \\vdots \\\\ a_{n1} &amp; \\cdots &amp; a_{nm} \\\\ \\end{bmatrix} \\] Code (mtx_A &lt;- matrix(1:9, 3, 3)) ## [,1] [,2] [,3] ## [1,] 1 4 7 ## [2,] 2 5 8 ## [3,] 3 6 9 ماتریس B \\[\\Large B = \\begin{bmatrix} b_{11} &amp; \\cdots &amp; b_{1m} \\\\ \\vdots &amp; \\ddots &amp; \\vdots \\\\ b_{n1} &amp; \\cdots &amp; b_{nm} \\\\ \\end{bmatrix} \\] Code (mtx_B &lt;- matrix(9:1, 3, 3)) ## [,1] [,2] [,3] ## [1,] 9 6 3 ## [2,] 8 5 2 ## [3,] 7 4 1 14.2.1 عملگرهای منطقی تساوی \\[\\Large \\Large A \\overset{?}{\\leq} B = \\begin{bmatrix} a_{11} \\overset{?}{\\leq} b_{11} &amp; \\cdots &amp; a_{1m} \\overset{?}{\\leq} b_{1m} \\\\ \\vdots &amp; \\ddots &amp; \\vdots \\\\ a_{n1} \\overset{?}{\\leq} b_{n1} &amp; \\cdots &amp; a_{nm} \\overset{?}{\\leq} b_{nm} \\\\ \\end{bmatrix} \\] Code mtx_A == mtx_B ## [,1] [,2] [,3] ## [1,] FALSE FALSE FALSE ## [2,] FALSE TRUE FALSE ## [3,] FALSE FALSE FALSE به جای علامت برابری می‌توان از نابرابری (!=)، کوچکتری (&lt;)، کوچکتر یا برابری (&lt;=)، بزرگتری (&gt;)، بزرگتر یا برابری (&gt;=)، استفاده کرد. 14.2.2 عملگرهای ریاضی عملیات‌های درایه به درایه \\[\\Large \\Large A + B = \\begin{bmatrix} a_{11} + b_{11} &amp; \\cdots &amp; a_{1m} + b_{1m} \\\\ \\vdots &amp; \\ddots &amp; \\vdots \\\\ a_{n1} + b_{n1} &amp; \\cdots &amp; a_{nm} + b_{nm} \\\\ \\end{bmatrix} \\] Code mtx_A + mtx_B ## [,1] [,2] [,3] ## [1,] 10 10 10 ## [2,] 10 10 10 ## [3,] 10 10 10 به جای علامت جمع می‌توان از تفریق (-)، ضرب (*)، تقسیم (/)، توان (^)، استفاده کرد. ضرب ماتریسی \\[\\Large \\begin{aligned} A \\times B &amp; = \\begin{bmatrix} a_{11} &amp; \\cdots &amp; a_{1m} \\\\ \\vdots &amp; \\ddots &amp; \\vdots \\\\ a_{n1} &amp; \\cdots &amp; a_{nm} \\\\ \\end{bmatrix} \\times \\begin{bmatrix} b_{11} &amp; \\cdots &amp; b_{1m} \\\\ \\vdots &amp; \\ddots &amp; \\vdots \\\\ b_{n1} &amp; \\cdots &amp; b_{nm} \\\\ \\end{bmatrix} \\\\ &amp; = \\begin{bmatrix} a_{11} \\times b_{11} + \\cdots + a_{1m} \\times b_{n1} &amp; \\cdots &amp; a_{11} \\times b_{1m} + \\cdots + a_{1m} \\times b_{nm} \\\\ \\vdots &amp; \\ddots &amp; \\vdots \\\\ a_{n1} \\times b_{11} + \\cdots + a_{nm} \\times b_{n1} &amp; \\cdots &amp; a_{n1} \\times b_{1m} + \\cdots + a_{nm} \\times b_{nm} \\\\ \\end{bmatrix} \\end{aligned} \\] Code mtx_A %*% mtx_B ## [,1] [,2] [,3] ## [1,] 90 54 18 ## [2,] 114 69 24 ## [3,] 138 84 30 "],["فرمت-داده---کمی-بیشتر.html", "فصل 15 فرمت داده - کمی بیشتر", " فصل 15 فرمت داده - کمی بیشتر ساختاری پر کاربرد دیگری که خیلی در زبان برنامه نویسی R شناخته شده، فرمت داده یا data frame است. نحوه تعریف یک فرمت داده به صورت زیر است: Code df &lt;- data.frame( &quot;Name&quot; = c(&quot;Mohsen&quot;, &quot;Xie&quot;, &quot;Narges&quot;), &quot;Sen&quot; = c(NA, 45, 36), &quot;Gender&quot; = factor(x = c(&quot;Male&quot;, NA, &quot;Female&quot;), levels = c(&quot;Female&quot;, &quot;Male&quot;)), &quot;Single&quot; = c(TRUE, FALSE, NA) ) نمایش داده با ساختار فرمت داده Code df ## Name Sen Gender Single ## 1 Mohsen NA Male TRUE ## 2 Xie 45 &lt;NA&gt; FALSE ## 3 Narges 36 Female NA نمایش ساختار داده Code str(df) ## &#39;data.frame&#39;: 3 obs. of 4 variables: ## $ Name : chr &quot;Mohsen&quot; &quot;Xie&quot; &quot;Narges&quot; ## $ Sen : num NA 45 36 ## $ Gender: Factor w/ 2 levels &quot;Female&quot;,&quot;Male&quot;: 2 NA 1 ## $ Single: logi TRUE FALSE NA همانطور که ساختار هر یک از ستون‌ها را مشاهده می‌کنید، متوجه می‌شوید که هر ستون ساختار برداری خاص خودش را دارد و دیگر مانند ماتریس همه‌ی ستون‌های آن یک نوع کلاس ندارند. تقریبا تمام خواصی که ساختار ماتریسی دارد، ساختار فرمت داده نیز دارد. نام سطر و ستون Code rownames(df) ## [1] &quot;1&quot; &quot;2&quot; &quot;3&quot; Code colnames(df) ## [1] &quot;Name&quot; &quot;Sen&quot; &quot;Gender&quot; &quot;Single&quot; تغییر نام سطر‌ها Code rownames(df) &lt;- c(&quot;avali&quot;, &quot;dovomi&quot;, &quot;sevomi&quot;) انتخاب ستونی خاص با اندیس Code df[, 3] ## [1] Male &lt;NA&gt; Female ## Levels: Female Male انتخاب ستونی خاص با نام Code df[, &quot;Gender&quot;] ## [1] Male &lt;NA&gt; Female ## Levels: Female Male انتخاب ستونی خاص با علامت دلار Code df$Gender ## [1] Male &lt;NA&gt; Female ## Levels: Female Male انتخاب سطر خاص با اندیس Code df[2, ] ## Name Sen Gender Single ## dovomi Xie 45 &lt;NA&gt; FALSE انتخاب سطر خاص با نام Code df[&quot;dovomi&quot;,] ## Name Sen Gender Single ## dovomi Xie 45 &lt;NA&gt; FALSE انتخاب سطر با فیلتر کردن برحسب یک مقدار خاص Code df[df$Name == &quot;Mohsen&quot;, ] ## Name Sen Gender Single ## avali Mohsen NA Male TRUE استفاده از کتابخانه tidyverse Code library(tidyverse) df |&gt; filter(Name == &quot;Mohsen&quot;) |&gt; select(Gender) ## Gender ## avali Male "],["تمرین-مفاهیم-پایه-r.html", "فصل 16 تمرین مفاهیم پایه R", " فصل 16 تمرین مفاهیم پایه R برای تمرین بیشتر می‌توانید به سایت‌هایی که تمرینات R ارائه می‌دهند دسترسی داشته باشید. با جستجو r exercises with solutions در گوگل به سایت‌های زیر دسترسی پیدا می‌کنید R-Exercise R-Tutorials R-Programming-Exercises R-programming-Exercises-Practice-Solution "],["پرسشنامه-وضعیت-مواد-مخدر-در-دوران-کرونا.html", "16.1 پرسشنامه وضعیت مواد مخدر در دوران کرونا", " 16.1 پرسشنامه وضعیت مواد مخدر در دوران کرونا A Global Survey on Changes in the Supply, Price, and Use of Illicit Drugs and Alcohol, and Related Complications During the 2020 COVID-19 Pandemic: https://www.frontiersin.org/articles/10.3389/fpsyt.2021.646206/full Reorganization of Substance Use Treatment and Harm Reduction Services During the COVID-19 Pandemic: A Global Survey: https://www.frontiersin.org/articles/10.3389/fpsyt.2021.639393/full 16.1.1 ساخت جدول ۱ مقاله فایل داده‌های پرسشنامه در پوشه داده ذخیره شده است. Code survey_path &lt;- &quot;./data/covid19_global_survey.csv&quot; داده‌های پرسشنامه را وارد کنید. Code survey &lt;- read.csv(survey_path) نگاه کلی به داده‌های پرسشنامه بیاندازید. Code str(survey) ## &#39;data.frame&#39;: 177 obs. of 22 variables: ## $ Gender : chr &quot;Male&quot; &quot;Male&quot; &quot;Male&quot; &quot;Male&quot; ... ## $ Age : int 69 37 50 61 54 44 40 64 NA 62 ... ## $ Date : chr &quot;2020-03-04&quot; &quot;2020-04-05&quot; &quot;2020-04-05&quot; &quot;2020-04-05&quot; ... ## $ Degree : chr &quot;MD;PhD&quot; &quot;MD&quot; &quot;MD&quot; &quot;PhD&quot; ... ## $ Discipline : chr &quot;Addiction medicine&quot; &quot;Psychiatry&quot; &quot;General Medicine&quot; &quot;Psychiatry&quot; ... ## $ Country : chr &quot;Netherlands&quot; &quot;Iran&quot; &quot;Iran&quot; &quot;Belgium&quot; ... ## $ Usage_Alcohol : chr &quot;Don&#39;t know&quot; &quot;Increased&quot; &quot;Increased&quot; &quot;Increased&quot; ... ## $ Usage_Cannabis : chr &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; ... ## $ Usage_Opiates : chr &quot;Don&#39;t know&quot; &quot;Increased&quot; &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; ... ## $ Usage_Amphetamines : chr &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; ... ## $ Usage_Cocaine : chr &quot;Don&#39;t know&quot; &quot;No/limited users&quot; &quot;No/limited users&quot; &quot;Don&#39;t know&quot; ... ## $ Supply_Alcohol : chr &quot;No change&quot; &quot;Decreased&quot; &quot;Increased&quot; &quot;No change&quot; ... ## $ Supply_Cannabis : chr &quot;Decreased&quot; &quot;Decreased&quot; &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; ... ## $ Supply_Opiates : chr &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; ... ## $ Supply_Amphetamines : chr &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; ... ## $ Supply_Cocaine : chr &quot;Don&#39;t know&quot; &quot;Decreased&quot; &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; ... ## $ Price_Alcohol : chr &quot;Don&#39;t know&quot; &quot;Increased&quot; &quot;Increased&quot; &quot;No change&quot; ... ## $ Price_Cannabis : chr &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; ... ## $ Price_Opiates : chr &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; ... ## $ Price_Amphetamines : chr &quot;Don&#39;t know&quot; &quot;Increased&quot; &quot;Don&#39;t know&quot; &quot;Don&#39;t know&quot; ... ## $ Price_Cocaine : chr &quot;Don&#39;t know&quot; &quot;Increased&quot; &quot;Don&#39;t know&quot; &quot;No change&quot; ... ## $ COVID19_Overall_Impact_on_SUD: int 8 7 7 6 8 8 8 8 6 7 ... فقط ابعاد مجموعه داده را بگیرید. Code dim(survey) ## [1] 177 22 فقط تعداد ستون‌ها را بگیرید. Code ncol(survey) # length(survey) ## [1] 22 فقط تعداد ردیف را بگیرید. Code nrow(survey) # length(survey[,1]) ## [1] 177 بردار مرتب شده صعودی ستون سن را بگیرید. Code sort(survey$Age) ## [1] 24 25 26 28 28 29 30 30 30 30 30 31 32 32 32 32 32 32 32 32 32 32 33 34 34 ## [26] 34 34 35 35 35 35 35 35 36 36 36 37 37 37 37 37 38 38 38 39 39 39 39 40 40 ## [51] 40 40 40 40 40 40 40 41 41 41 41 41 42 43 43 43 43 43 43 44 44 44 44 44 45 ## [76] 45 45 45 46 46 47 47 47 47 47 47 47 47 47 48 48 48 48 48 48 48 49 49 49 49 ## [101] 49 50 50 50 50 50 50 50 51 51 51 51 51 52 52 52 53 53 53 53 53 54 54 54 54 ## [126] 54 54 54 55 55 55 56 56 56 56 57 58 58 58 58 58 59 59 59 59 59 59 60 60 60 ## [151] 61 61 61 61 62 62 62 63 63 64 64 65 65 66 67 68 69 69 69 بردار مرتب شده صعودی از شماره اندیس ستون سن را بگیرید. Code order(survey$Age) ## [1] 110 173 92 86 163 170 57 115 117 126 159 95 14 16 19 55 64 66 ## [19] 130 160 168 171 61 45 96 97 135 53 79 104 158 164 177 41 62 100 ## [37] 2 63 67 136 176 88 105 150 69 106 116 152 7 37 94 145 149 153 ## [55] 161 167 174 58 72 87 103 131 59 46 49 60 121 148 155 6 13 82 ## [73] 109 127 32 70 113 123 30 157 22 25 34 39 81 101 102 154 166 43 ## [91] 65 75 77 99 120 140 89 128 143 147 165 3 24 42 68 85 125 132 ## [109] 28 129 142 151 175 73 122 137 18 29 48 71 91 5 20 21 27 40 ## [127] 44 51 31 78 98 15 80 83 172 133 26 74 84 90 124 11 33 38 ## [145] 47 112 141 93 111 134 4 56 107 156 10 12 54 108 118 8 146 138 ## [163] 139 144 36 35 1 50 52 9 17 23 76 114 119 162 169 شماره اندیس‌های ردیف‌هایی که سن آن‌ها کمتر از ۳۰ سال است را بگیرید. Code which(survey$Age &lt; 30) ## [1] 86 92 110 163 170 173 چهار ستون اول داده را برای سنین زیر ۳۰ و مدرک کارشناسی انتخاب کنید. Code # survey[1:4] |&gt; subset(survey$Age &lt; 30 &amp; survey$Degree == &quot;BSc&quot;) survey[which(survey$Age &lt; 30 &amp; survey$Degree == &quot;BSc&quot;), 1:4] ## Gender Age Date Degree ## 163 Male 28 2020-04-30 BSc ## 173 Male 25 2020-05-04 BSc تعداد و درصد افراد با مدرک کارشناسی را محاسبه کنید. Code # survey[which(survey$Degree == &quot;BSc&quot;),] |&gt; nrow() # survey |&gt; subset(survey$Degree == &quot;BSc&quot;) |&gt; nrow() sum(survey$Degree == &quot;BSc&quot;) ## [1] 6 Code (sum(survey$Degree == &quot;BSc&quot;) / nrow(survey) * 100) |&gt; round(1) ## [1] 3.4 تعداد و درصد افراد را برای همه‌ی مدارک تحصیلی محاسبه کنید و در قالب داده در متغییر df_degrees ذخیره کنید. Code degrees &lt;- unique(survey$Degree) n_degrees &lt;- length(degrees) df_degrees &lt;- data.frame() for (i in seq_len(n_degrees)) { df_degrees[i, &quot;value&quot;] &lt;- degrees[i] df_degrees[i, &quot;n&quot;] &lt;- sum(survey$Degree == degrees[i]) df_degrees[i, &quot;p&quot;] &lt;- (sum(survey$Degree == degrees[i]) / nrow(survey) * 100) |&gt; round(1) } Code df_degrees ## value n p ## 1 MD;PhD 32 18.1 ## 2 MD 72 40.7 ## 3 PhD 31 17.5 ## 4 MSc 13 7.3 ## 5 MD;MSc 13 7.3 ## 6 Others 10 5.6 ## 7 BSc 6 3.4 برای گرفتن تعداد مقادیر هر ستون تابعی به اسم value_counter بنویسید. Code column &lt;- &quot;Degree&quot; value_counter &lt;- function(data, column) { values &lt;- unique(data[, column]) n_values &lt;- length(values) df &lt;- data.frame() for (i in seq_len(n_values)) { df[i, &quot;value&quot;] &lt;- values[i] df[i, &quot;n&quot;] &lt;- sum(data[, column] == values[i]) df[i, &quot;p&quot;] &lt;- (sum(data[, column] == values[i]) / nrow(survey) * 100) |&gt; round(1) } df } Code survey |&gt; value_counter(&quot;Degree&quot;) ## value n p ## 1 MD;PhD 32 18.1 ## 2 MD 72 40.7 ## 3 PhD 31 17.5 ## 4 MSc 13 7.3 ## 5 MD;MSc 13 7.3 ## 6 Others 10 5.6 ## 7 BSc 6 3.4 تابع values_counter را به گونه‌ای بنویسید که فرمت داده تعداد مقادیر برای ستون‌های جنسیت، مدرک، رشته را بگیرد، سپس فرمت داده را در متغییر df_demog ذخیره کنید. Code columns &lt;- c(&quot;Degree&quot;, &quot;Gender&quot;) values_counter &lt;- function(data, columns) { n_columns &lt;- length(columns) for (i in seq_len(n_columns)) { df &lt;- data |&gt; value_counter(columns[i]) df$column &lt;- columns[i] if (i == 1) { dfs &lt;- df } else { dfs &lt;- dfs |&gt; rbind(df) } } dfs[c(&quot;column&quot;, &quot;value&quot;, &quot;n&quot;, &quot;p&quot;)] } Code df_demog &lt;- survey |&gt; values_counter(c(&quot;Gender&quot;, &quot;Degree&quot;, &quot;Discipline&quot;)) df_demog |&gt; head() ## column value n p ## 1 Gender Male 111 62.7 ## 2 Gender Other/not disclosed 4 2.3 ## 3 Gender Female 62 35.0 ## 4 Degree MD;PhD 32 18.1 ## 5 Degree MD 72 40.7 ## 6 Degree PhD 31 17.5 برای ستون سن میانگین و انحراف معیار را محاسبه کنید. Code df_age &lt;- data.frame( &quot;column&quot; = &quot;Age&quot;, &quot;m&quot; = survey$Age |&gt; mean(na.rm = TRUE) |&gt; round(2), &quot;s&quot; = survey$Age |&gt; sd(na.rm = TRUE) |&gt; round(2) ) df_age ## column m s ## 1 Age 46.51 10.78 داده‌های df_age را به فرمت داده df_demog اضافه کنید. Code colnames(df_demog) &lt;- c(&quot;column&quot;, &quot;value&quot;, &quot;n_m&quot;, &quot;p_s&quot;) colnames(df_age) &lt;- c(&quot;column&quot;, &quot;n_m&quot;, &quot;p_s&quot;) df_age$value &lt;- &quot;&quot; df_demog &lt;- rbind(df_demog, df_age) از جدول تهیه شده خروجی اکسل با نام demog_table_covid19_survey تهیه کنید. Code df_demog |&gt; writexl::write_xlsx(&quot;./data/demog_table_covid19_survey.xlsx&quot;) در این مطالعه چه تعداد کشور شرکت کرده‌اند. Code survey$Country |&gt; unique() |&gt; length() ## [1] 77 از هر کشور چه تعداد شرکت کرده‌اند. Code df &lt;- survey |&gt; values_counter(&quot;Country&quot;) df[with(df, order(-n)),] |&gt; head() ## column value n p ## 7 Country United States 13 7.3 ## 13 Country India 13 7.3 ## 2 Country Iran 12 6.8 ## 1 Country Netherlands 10 5.6 ## 18 Country United Kingdom 9 5.1 ## 4 Country Italy 6 3.4 16.1.2 پاسخ به چند سوال "],["main_resource.html", "منابع", " منابع کتاب مفاهیم پایه R نسخه تحت وب کتاب R Basics را می‌توانید از اینجا بخوانید. کتاب دستورات پایه R نسخه تحت وب کتاب Basic R Commands را می‌توانید از اینجا بخوانید. http://www.sthda.com برگه تقلب برای یاد آوری سریع دستورات و مفاهیم پایه R یک برگه تقلب (Cheatsheet) مبانی R تهیه شده است که می‌توانید آن را از اینجا دانلود کنید. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
